@using System.Globalization;
@using System;
@{
    ViewData["Title"] = "Prochaine fermeture";
}
@{
    Model.Sort((a, b) => a.closing_date.CompareTo(b.closing_date));
    Temps list = new Temps();
    List<DateTime> list2 = new List<DateTime>();
    var dateNow = Convert.ToDateTime(DateTime.Now.ToString());
    foreach (var date in Model)
    {
        var dateExacte = Convert.ToDateTime(date.closing_date);
        if (dateExacte > dateNow)
        {
            list = date;
            break;
        }
    }
}
@{ 
    var currentTime = DateTime.Now.TimeOfDay;
}
@model List<Temps>


<div class="text-center">
    <h1 class="display-4">Prochaine fermeture</h1>
    <p>Prochaine fermeture : @list.closing_date, @list.closing_date.DayOfWeek à cause de @list.boat_name </p>
    <p>Durée de la fermeture : @Html.Raw(list.reopening_date - @list.closing_date)</p>
    <p>Prochaine ouverture :  @list.reopening_date, @list.reopening_date.DayOfWeek</p>
</div>

<div class="text-center">   
    <p>
        Risque de bouchon : 
        
           @if (list.closing_date.Hour.Equals(7) ||
               list.closing_date.Hour.Equals(8) ||
               list.closing_date.Hour.Equals(9) || 
               list.closing_date.Hour.Equals(17) ||
               list.closing_date.Hour.Equals(18) ||
               list.closing_date.Hour.Equals(19))
            {
                <text>élevé</text>;
            }
            else
            {
                <text>faible</text>;
            }
    </p>
</div>
